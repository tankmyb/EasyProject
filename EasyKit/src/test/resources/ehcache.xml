<?xml version="1.0" encoding="UTF-8"?>
<!--必须属性-->
<!--maxElementsInMemory:内存管理的缓存元素数量最大限值-->
<!--eternal:设定元素是否持久话。若设为true，则缓存元素不会过期-->
<!--overflowToDisk:设定是否在内存填满的时候把数据转到磁盘上-->
<!--maxElementsOnDisk:设硬盘管理的缓存元素数量最大限值。默认值为0，就是没有限制-->

<!--可选属性-->
<!--timeToIdleSeconds:设定元素在过期前空闲状态的时间，只对非持久性缓存对象有效。单位：秒，默认值为0,值为0意味着元素可以闲置至无限长时间-->
<!--timeToLiveSeconds:设定元素从创建到过期的时间。其他与timeToIdleSeconds类似-->
<!--diskPersistent:设定在虚拟机重启时是否进行磁盘存储，默认为false.(我的直觉，对于安全小型应用，宜设为true-->
<!--diskSpoolBufferSizeMB: 存入磁盘时的缓冲区大小，默认30MB,每个缓存都有自己的缓冲区。-->
<!--diskExpiryThreadIntervalSeconds:访问磁盘线程活动时间-->
<!--memoryStoreEvictionPolicy:元素逐出缓存规则。共有三种，Recently Used (LRU)最近最少使用，为默认,First In First Out (FIFO)，先进先出。Less Frequently Used(specified as LFU)最少使用。-->

<!--
1、timeToLiveSeconds的定义是：以创建时间为基准开始计算的超时时长；<br/>
2、timeToIdleSeconds的定义是：在创建时间和最近访问时间中取出离现在最近的时间作为基准计算的超时时长；<br/>
3、如果仅设置了timeToLiveSeconds，则该对象的超时时间=创建时间+timeToLiveSeconds，假设为A；<br/>
4、如果没设置timeToLiveSeconds，则该对象的超时时间=min(创建时间，最近访问时间)+timeToIdleSeconds，假设为B；<br/>
5、如果两者都设置了，则取出A、B最少的值，即min(A,B)，表示只要有一个超时成立即算超时。<br/>
-->
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true"
	monitoring="autodetect">
	<diskStore path="e:/ehcache"/>
	<defaultCache
		maxElementsInMemory="10000"
		eternal="false"
		timeToIdleSeconds="60"
		timeToLiveSeconds="60"
		overflowToDisk="true"
		maxElementsOnDisk="10000000"
		diskPersistent="false"
		diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU"

		/>

	<cache name="UrlCache"

		maxElementsInMemory="8000"

		maxElementsOnDisk="10000000"

		eternal="false"
		timeToLiveSeconds="60"
		overflowToDisk="false"

		diskSpoolBufferSizeMB="20"

		memoryStoreEvictionPolicy="LFU"

		/>

</ehcache>
